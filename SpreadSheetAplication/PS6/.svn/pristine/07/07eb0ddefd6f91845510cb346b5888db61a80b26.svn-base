using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using SS;
using System.Text.RegularExpressions;


namespace SpreadsheetGUI
{
    public partial class Form1 : Form
    {
        //Local Variables

        SS.Spreadsheet sheet;




            /// <summary>
            /// Default constructor for creating an empty spreadsheet
            /// </summary>
        public Form1()
        {
            InitializeComponent();

                //creates a default sheet
            sheet = new Spreadsheet(s => Regex.IsMatch(s, @"^[a-zA-Z]+[1-99]+$"), s => s, "PS6");

            
            spreadsheetPanel1.SelectionChanged += displaySelection;
            spreadsheetPanel1.SetSelection(2, 3);
        }


            /// <summary>
            /// Constructor used by the openDialog to load and display 
            /// the file in the spreadsheet
            /// </summary>
            /// <param name="file">string representation of the file</param>
        public Form1(string file)
        {

            InitializeComponent();

            sheet = new Spreadsheet(file, s => Regex.IsMatch(s, @"^[a-zA-Z]+[1-99]+$"), s => s, "PS6");

                //Fill the spreadsheet
            fillSheet();

            //register for listening
            spreadsheetPanel1.SelectionChanged += displaySelection;
            spreadsheetPanel1.SetSelection(2, 3);
        }


            /// <summary>
            /// 
            /// </summary>
            /// <param name="ss"></param>
        private void displaySelection(SpreadsheetPanel ss)
        {
            int row, col;
            String value;
            ss.GetSelection(out col, out row);
            ss.GetValue(col, row, out value);
            if (value == "")
            {
                ss.SetValue(col, row, DateTime.Now.ToLocalTime().ToString("T"));
                ss.GetValue(col, row, out value);
                MessageBox.Show("Selection: column " + col + " row " + row + " value " + value);
            }
        }

            //new sheet open
        private void newToolStripMenuItem_Click(object sender, EventArgs e)
        {

            SheetApplicationContext.getAppContext().RunForm(new Form1());
        }


            //closes the current window
        private void closeToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Close();
        }

            /// <summary>
            /// Shows the current info about this program
            /// </summary>
            /// <param name="sender"></param>
            /// <param name="e"></param>
        private void aboutToolStripMenuItem_Click(object sender, EventArgs e)
        {
            MessageBox.Show("Written and developed by Nephi Self 2012 \n Version PS6");
        }

            /// <summary>
            /// when file>open is selected uses the opendialog box
            /// to alow the user to load the file of choice
            /// </summary>
            /// <param name="sender"></param>
            /// <param name="e"></param>
        private void openToolStripMenuItem_Click(object sender, EventArgs e)
        {
            OpenFileDialog open = new OpenFileDialog();
            open.DefaultExt = ".ss";
            open.Filter = "Spreadsheet Files (.ss)|*.ss|All Files (*.*|*.*";
            open.FilterIndex = 1;
            open.Multiselect = false;
                //takes the results of the selection and loads it into DialogResult
            DialogResult = open.ShowDialog();

                //if the cancale button ws pressed ignore
            if (DialogResult != null)
            {
                //creates a new thread window and constructs the contents using the contents of the file
                SheetApplicationContext.getAppContext().RunForm(new Form1(DialogResult.ToString()));
            }
            

        }//end open menu item


        //*************************** Helper Methods **************************************

        public bool fillSheet()
        {
                //gets all the cells that are filled for loading into the system
            foreach (string s in sheet.GetNamesOfAllNonemptyCells())
            {


            }
            return true;
        }

    }//end form 1 class
}//end namespace
