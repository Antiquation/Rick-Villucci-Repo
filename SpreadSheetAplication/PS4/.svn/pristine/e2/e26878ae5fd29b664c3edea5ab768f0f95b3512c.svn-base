using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;


namespace SS
{
    class Spreadsheet : AbstractSpreadsheet
    {



            /// <summary>
            /// Zero argument constructor which allows the creation of 
            /// an AbstractSpreadsheet object. When a cell is visited it is instantiated with either
            /// a default (name + empty content) or if content is specified (name + valid content)
            /// it is then added to the Hashset.
            /// </summary>
        public Spreadsheet()
        {
                //the collection of non duplicate cells located in the sheet
            HashSet<Cell> sheet = new HashSet<Cell>();

        }





        public override IEnumerable<string> GetNamesOfAllNonemptyCells()
        {
            throw new NotImplementedException();
        }

        public override object GetCellContents(string name)
        {
            throw new NotImplementedException();
        }

        public override ISet<string> SetCellContents(string name, double number)
        {
            throw new NotImplementedException();
        }

        public override ISet<string> SetCellContents(string name, string text)
        {
            throw new NotImplementedException();
        }

        public override ISet<string> SetCellContents(string name, Formula formula)
        {
            throw new NotImplementedException();
        }

        protected override IEnumerable<string> GetDirectDependents(string name)
        {
            throw new NotImplementedException();
        }
    }//end Spreadsheed class




}
